#include <RCSwitch.h>

RCSwitch mySwitch = RCSwitch();
unsigned long num ;

int pin1=6;
int pin2=7;
int pin3=8;
int pin4=9;
boolean inState1 = false;
int state = 1;
int previousState = 0; // Add a variable to store the previous state

void setup() {
  // put your setup code here, to run once:
 Serial.begin(9600);
  mySwitch.enableReceive(0);  // Receiver on interrupt 0 => that is pin #12
  Serial.println("Application start");
  
pinMode (pin1, OUTPUT);
pinMode (pin2, OUTPUT);
pinMode (pin3, OUTPUT);
pinMode (pin4, OUTPUT);

}

void loop() {
  // put your main code here, to run repeatedly:

 handleReceiveRemoteSignal();
  choseState();
  previousState = state;
  delay(100); // Add a delay to prevent excessive processing
}

void handleReceiveRemoteSignal() {
  if (mySwitch.available()) {
    num = mySwitch.getReceivedValue();
    if (num == 1480481) state = 1;
    else if (num == 1480482) state = 2;
    else if (num == 1480484) state = 3;
    mySwitch.resetAvailable();

    Serial.print("Received ");
    Serial.println(num);

    Serial.print("State ");
    Serial.println(state);
  }
}

void choseState() {
  // if (state != previousState) {
    // Only execute state actions if the state has changed
    switch (state) {
      case 1:
        dong(); // Move forward
        break;
        
      case 2:
        inState1 = false;
        mo(); // Move backward
       break;
      case 3:
        inState1 = false;
        dung(); // Stop
        break;
      default:
        // Handle unknown state
        break;
    }
    // previousState = state; // Update the previous state
  }
// }


void dong () {
    digitalWrite(pin1, HIGH);
    digitalWrite(pin2, LOW);
    digitalWrite(pin3, HIGH);
    digitalWrite(pin4, LOW);
    if (inState1 == true) delay(1000)
    else delay(2000);

    // Stop for 1 second
    dung ();
    if (inState1 == true) delay(500)
    else delay(1000);
    inState1 = true;
}


void mo () {
digitalWrite (pin1, LOW); digitalWrite (pin2, HIGH);
digitalWrite (pin3, LOW); digitalWrite (pin4, HIGH);
}

void dung () {
digitalWrite (pin1, LOW); digitalWrite (pin2, LOW);
digitalWrite (pin3, LOW); digitalWrite (pin4, LOW);
}
